version: '3.8'
services:
  loki:
    image: grafana/loki:2.9.2
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - silverithm_network

  promtail:
    image: grafana/promtail:2.9.2
    volumes:
      - ./logs:/logs
      - ./cfg/promtail.yaml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    networks:
      - silverithm_network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./cfg/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    networks:
      - silverithm_network
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
      - 3003:3003
    volumes:
      - ./cfg/grafana/provisioning:/etc/grafana/provisioning
      - ./cfg/grafana/grafana.ini:/etc/grafana/grafana.ini
      - grafana-data:/var/lib/grafana
    env_file:
      - .env
      - ./cfg/grafana/grafana.env
    environment:
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
      - SLACK_MONITORING_WEBHOOK_URL=${SLACK_MONITORING_WEBHOOK_URL}
    networks:
      - silverithm_network
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411" # Expose the Zipkin UI port
    networks:
      - silverithm_network
  db:
    container_name: silverithm_db
    image: mysql:8.3
    environment:
      MYSQL_DATABASE: ${MYSQL_NAME}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - db-data:/var/lib/mysql
      - ./logs/mysql:/var/log/mysql
    restart: always
    networks:
      - silverithm_network
    command: [ 'mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci', '--slow-query-log=1', '--slow-query-log-file=/var/log/mysql/mysql-slow.log', '--long-query-time=1' ]

  redis:
    container_name: silverithm_redis
    image: redis
    ports:
      - "6379:6379"
    restart: always
    networks:
      - silverithm_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: silverithm_rabbitmq
    ports:
      - "5672:5672"   # RabbitMQ 기본 포트
      - "15672:15672" # RabbitMQ 관리 UI 포트
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    networks:
      - silverithm_network

  app:
    container_name: silverithm-backend
    build: .
    volumes:
      - ./logs:/logs
    ports:
      - "8080:8080"
      - "9101:9101"
    deploy:
      resources:
        limits:
          cpus: '2.0'
    env_file:
      - .env
    environment:
      LOG_PATH: /logs
      SPRING_DATASOURCE_URL: ${MYSQL_PROD_URL}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_RABBITMQ_HOST: ${RABBITMQ_HOST}
      SPRING_RABBITMQ_PORT: ${RABBITMQ_PORT}
      SPRING_RABBITMQ_USERNAME: ${RABBITMQ_USER}
      SPRING_RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      SPRING_MAIL_HOST: ${MAIL_HOST}
      SPRING_MAIL_PORT: 587
      SPRING_MAIL_USERNAME: ${MAIL_USERNAME}
      SPRING_MAIL_PASSWORD: ${MAIL_PASSWORD}
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: "true"
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: "true"
      SLACK_WEBHOOK_URL: ${SLACK_WEBHOOK_URL}
      SLACK_MONITORING_WEBHOOK_URL: ${SLACK_MONITORING_WEBHOOK_URL}
      SLACK_PAYMENT_WEBHOOK_URL: ${SLACK_PAYMENT_WEBHOOK_URL}
      SLACK_SIGNUP_WEBHOOK_URL: ${SLACK_SIGNUP_WEBHOOK_URL}
      SLACK_API_FAILURE_WEBHOOK_URL: ${SLACK_API_FAILURE_WEBHOOK_URL}
      JAVA_OPTS: >
        -XX:MaxRAMPercentage=80.0
        -XX:InitialRAMPercentage=70.0
        -XX:+UseG1GC
        -XX:ParallelGCThreads=10  # 10코어에 맞춤
        -XX:ConcGCThreads=2
        -XX:MaxGCPauseMillis=200
    depends_on:
      - db
    restart: always
    networks:
      - silverithm_network

  nginx:
    image: nginx:latest
    restart: unless-stopped
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - app
    networks:
      - silverithm_network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    restart: unless-stopped
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --cert-name silverithm.site; sleep 12h & wait $${!}; done;'"
    networks:
      - silverithm_network

volumes:
  db-data:
  grafana-data:

networks:
  silverithm_network: